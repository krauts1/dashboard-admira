{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { googleAnaliticsMock } from '../__mocks__/googleAnalitisMock';\nexport default function useNewReleases() {\n  _s();\n  const visitsDataChart = useMemo(() => {\n    return {\n      title: {\n        text: 'Visitas a la pagina'\n      },\n      tooltip: {},\n      xAxis: {\n        type: 'category',\n        data: googleAnaliticsMock.vistasPagina.map(item => item.fecha)\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: {\n        type: 'bar',\n        data: googleAnaliticsMock.vistasPagina.map(item => item.vistas)\n      }\n    };\n  }, [googleAnaliticsMock]);\n  const radarChartData = useMemo(() => {\n    var _artistData, _artistData2, _artistData2$genres;\n    return {\n      title: {\n        text: 'Generos',\n        x: 'center'\n      },\n      tooltip: {},\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        data: (_artistData = artistData) === null || _artistData === void 0 ? void 0 : _artistData.genres\n      },\n      series: [{\n        name: '',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '60%'],\n        data: (_artistData2 = artistData) === null || _artistData2 === void 0 ? void 0 : (_artistData2$genres = _artistData2.genres) === null || _artistData2$genres === void 0 ? void 0 : _artistData2$genres.map(genre => {\n          var _artistData3;\n          const value = 100 / ((_artistData3 = artistData) === null || _artistData3 === void 0 ? void 0 : _artistData3.genres.length);\n          return {\n            value,\n            name: genre\n          };\n        }),\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n  }, [googleAnaliticsMock]);\n  return {\n    visitsDataChart\n    // artistData,\n    // radarChartData\n  };\n}\n_s(useNewReleases, \"MJL5f+0xxWs9vHVZiKFHOBLw3lA=\");","map":{"version":3,"names":["useMemo","googleAnaliticsMock","useNewReleases","_s","visitsDataChart","title","text","tooltip","xAxis","type","data","vistasPagina","map","item","fecha","yAxis","series","vistas","radarChartData","_artistData","_artistData2","_artistData2$genres","x","legend","orient","left","artistData","genres","name","radius","center","genre","_artistData3","value","length","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor"],"sources":["C:/Users/Admin/Documents/git/dashboard-admira/src/hooks/useGoogleAnalitics.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport { googleAnaliticsMock } from '../__mocks__/googleAnalitisMock';\r\n\r\nexport default function useNewReleases() {\r\n\r\n    const visitsDataChart = useMemo(() =>  {\r\n\r\n        return {\r\n            title: {\r\n                text: 'Visitas a la pagina'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                type: 'category',\r\n                data: googleAnaliticsMock.vistasPagina.map(item => item.fecha)\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: {\r\n                type: 'bar',\r\n                data: googleAnaliticsMock.vistasPagina.map(item => item.vistas)\r\n            }\r\n        }\r\n    }\r\n    , [googleAnaliticsMock]);\r\n\r\n    const radarChartData = useMemo(() => ({\r\n        title: {\r\n            text: 'Generos',\r\n            x:'center'\r\n          },\r\n          tooltip: {},\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: artistData?.genres\r\n          },\r\n          series : [\r\n            {\r\n            name: '',\r\n            type: 'pie',\r\n            radius : '55%',\r\n            center: ['50%', '60%'],\r\n            data: artistData?.genres?.map(genre => {\r\n                const value = 100 / artistData?.genres.length\r\n                return {\r\n                    value, \r\n                    name: genre\r\n                }\r\n            }),\r\n            itemStyle: {\r\n              emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n            }\r\n          ]\r\n    }), [googleAnaliticsMock])\r\n\r\n    return {\r\n        visitsDataChart,\r\n        // artistData,\r\n        // radarChartData\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,iCAAiC;AAErE,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAErC,MAAMC,eAAe,GAAGJ,OAAO,CAAC,MAAO;IAEnC,OAAO;MACHK,KAAK,EAAE;QACHC,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MACXC,KAAK,EAAE;QACHC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAET,mBAAmB,CAACU,YAAY,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK;MACjE,CAAC;MACDC,KAAK,EAAE;QACHN,IAAI,EAAE;MACV,CAAC;MACDO,MAAM,EAAE;QACJP,IAAI,EAAE,KAAK;QACXC,IAAI,EAAET,mBAAmB,CAACU,YAAY,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,MAAM;MAClE;IACJ,CAAC;EACL,CAAC,EACC,CAAChB,mBAAmB,CAAC,CAAC;EAExB,MAAMiB,cAAc,GAAGlB,OAAO,CAAC;IAAA,IAAAmB,WAAA,EAAAC,YAAA,EAAAC,mBAAA;IAAA,OAAO;MAClChB,KAAK,EAAE;QACHC,IAAI,EAAE,SAAS;QACfgB,CAAC,EAAC;MACJ,CAAC;MACDf,OAAO,EAAE,CAAC,CAAC;MACXgB,MAAM,EAAE;QACNC,MAAM,EAAE,UAAU;QAClBC,IAAI,EAAE,MAAM;QACZf,IAAI,GAAAS,WAAA,GAAEO,UAAU,cAAAP,WAAA,uBAAVA,WAAA,CAAYQ;MACpB,CAAC;MACDX,MAAM,EAAG,CACP;QACAY,IAAI,EAAE,EAAE;QACRnB,IAAI,EAAE,KAAK;QACXoB,MAAM,EAAG,KAAK;QACdC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;QACtBpB,IAAI,GAAAU,YAAA,GAAEM,UAAU,cAAAN,YAAA,wBAAAC,mBAAA,GAAVD,YAAA,CAAYO,MAAM,cAAAN,mBAAA,uBAAlBA,mBAAA,CAAoBT,GAAG,CAACmB,KAAK,IAAI;UAAA,IAAAC,YAAA;UACnC,MAAMC,KAAK,GAAG,GAAG,KAAAD,YAAA,GAAGN,UAAU,cAAAM,YAAA,uBAAVA,YAAA,CAAYL,MAAM,CAACO,MAAM;UAC7C,OAAO;YACHD,KAAK;YACLL,IAAI,EAAEG;UACV,CAAC;QACL,CAAC,CAAC;QACFI,SAAS,EAAE;UACTC,QAAQ,EAAE;YACVC,UAAU,EAAE,EAAE;YACdC,aAAa,EAAE,CAAC;YAChBC,WAAW,EAAE;UACb;QACF;MACA,CAAC;IAET,CAAC;EAAA,CAAC,EAAE,CAACtC,mBAAmB,CAAC,CAAC;EAE1B,OAAO;IACHG;IACA;IACA;EACJ,CAAC;AACL;AAACD,EAAA,CAhEuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}