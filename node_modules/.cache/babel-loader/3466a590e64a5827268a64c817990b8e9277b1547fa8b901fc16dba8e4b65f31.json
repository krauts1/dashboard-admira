{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { googleAnaliticsMock } from '../__mocks__/googleAnalitisMock';\nexport default function useNewReleases() {\n  _s();\n  const visitsDataChart = useMemo(() => {\n    return {\n      title: {\n        text: 'Visitas a la pagina'\n      },\n      tooltip: {},\n      xAxis: {\n        type: 'category',\n        data: googleAnaliticsMock.vistasPagina.map(item => item.fecha)\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: {\n        type: 'bar',\n        data: googleAnaliticsMock.vistasPagina.map(item => item.vistas)\n      }\n    };\n  }, [googleAnaliticsMock]);\n  const sesionesChartData = useMemo(() => ({\n    title: {\n      text: 'Sesiones',\n      x: 'center'\n    },\n    tooltip: {},\n    legend: {\n      orient: 'vertical',\n      left: 'left'\n      // data: artistData?.genres\n    },\n    series: [{\n      name: '',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      // data: artistData?.genres?.map(genre => {\n      //     const value = 100 / artistData?.genres.length\n      //     return {\n      //         value, \n      //         name: genre\n      //     }\n      // }),\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  }), [googleAnaliticsMock]);\n  return {\n    visitsDataChart,\n    sesionesChartData\n    // radarChartData\n  };\n}\n_s(useNewReleases, \"ZNxpzTYAp+rKlV0kYDeE1dln+TU=\");","map":{"version":3,"names":["useMemo","googleAnaliticsMock","useNewReleases","_s","visitsDataChart","title","text","tooltip","xAxis","type","data","vistasPagina","map","item","fecha","yAxis","series","vistas","sesionesChartData","x","legend","orient","left","name","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor"],"sources":["C:/Users/Admin/Documents/git/dashboard-admira/src/hooks/useGoogleAnalitics.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport { googleAnaliticsMock } from '../__mocks__/googleAnalitisMock';\r\n\r\nexport default function useNewReleases() {\r\n\r\n    const visitsDataChart = useMemo(() =>  {\r\n\r\n        return {\r\n            title: {\r\n                text: 'Visitas a la pagina'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                type: 'category',\r\n                data: googleAnaliticsMock.vistasPagina.map(item => item.fecha)\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: {\r\n                type: 'bar',\r\n                data: googleAnaliticsMock.vistasPagina.map(item => item.vistas)\r\n            }\r\n        }\r\n    }\r\n    , [googleAnaliticsMock]);\r\n\r\n    const sesionesChartData = useMemo(() => ({\r\n        title: {\r\n            text: 'Sesiones',\r\n            x:'center'\r\n          },\r\n          tooltip: {},\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            // data: artistData?.genres\r\n          },\r\n          series : [\r\n            {\r\n            name: '',\r\n            type: 'pie',\r\n            radius : '55%',\r\n            center: ['50%', '60%'],\r\n            // data: artistData?.genres?.map(genre => {\r\n            //     const value = 100 / artistData?.genres.length\r\n            //     return {\r\n            //         value, \r\n            //         name: genre\r\n            //     }\r\n            // }),\r\n            itemStyle: {\r\n              emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n            }\r\n          ]\r\n    }), [googleAnaliticsMock])\r\n\r\n    return {\r\n        visitsDataChart,\r\n        sesionesChartData,\r\n        // radarChartData\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,iCAAiC;AAErE,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAErC,MAAMC,eAAe,GAAGJ,OAAO,CAAC,MAAO;IAEnC,OAAO;MACHK,KAAK,EAAE;QACHC,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MACXC,KAAK,EAAE;QACHC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAET,mBAAmB,CAACU,YAAY,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK;MACjE,CAAC;MACDC,KAAK,EAAE;QACHN,IAAI,EAAE;MACV,CAAC;MACDO,MAAM,EAAE;QACJP,IAAI,EAAE,KAAK;QACXC,IAAI,EAAET,mBAAmB,CAACU,YAAY,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,MAAM;MAClE;IACJ,CAAC;EACL,CAAC,EACC,CAAChB,mBAAmB,CAAC,CAAC;EAExB,MAAMiB,iBAAiB,GAAGlB,OAAO,CAAC,OAAO;IACrCK,KAAK,EAAE;MACHC,IAAI,EAAE,UAAU;MAChBa,CAAC,EAAC;IACJ,CAAC;IACDZ,OAAO,EAAE,CAAC,CAAC;IACXa,MAAM,EAAE;MACNC,MAAM,EAAE,UAAU;MAClBC,IAAI,EAAE;MACN;IACF,CAAC;IACDN,MAAM,EAAG,CACP;MACAO,IAAI,EAAE,EAAE;MACRd,IAAI,EAAE,KAAK;MACXe,MAAM,EAAG,KAAK;MACdC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;MACtB;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,SAAS,EAAE;QACTC,QAAQ,EAAE;UACVC,UAAU,EAAE,EAAE;UACdC,aAAa,EAAE,CAAC;UAChBC,WAAW,EAAE;QACb;MACF;IACA,CAAC;EAET,CAAC,CAAC,EAAE,CAAC7B,mBAAmB,CAAC,CAAC;EAE1B,OAAO;IACHG,eAAe;IACfc;IACA;EACJ,CAAC;AACL;AAACf,EAAA,CAhEuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}