{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useContext } from 'react';\nimport DashboardContext from '../contexts/generalContext';\nexport default function useNewReleases() {\n  _s();\n  const [state] = useContext(DashboardContext);\n  const {\n    token,\n    artistData\n  } = state;\n  const artistDataChart = useMemo(() => ({\n    title: {\n      text: artistData === null || artistData === void 0 ? void 0 : artistData.name\n    },\n    tooltip: {},\n    legend: {\n      data: ['Datos del Artista']\n    },\n    xAxis: {\n      data: ['Seguidores', 'Popularidad']\n    },\n    yAxis: {},\n    series: {\n      type: 'bar',\n      data: [artistData === null || artistData === void 0 ? void 0 : artistData.followers, artistData === null || artistData === void 0 ? void 0 : artistData.popularity]\n    }\n  }), [artistData, token]);\n  const radarChartData = useMemo(() => ({\n    title: {\n      text: 'Generos',\n      x: 'center'\n    },\n    tooltip: {},\n    legend: {\n      orient: 'vertical',\n      left: 'left',\n      data: artistData === null || artistData === void 0 ? void 0 : artistData.genres\n    },\n    series: [{\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      data: artistData === null || artistData === void 0 ? void 0 : artistData.genres,\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  }), [artistData]);\n  return {\n    artistDataChart,\n    artistData,\n    radarChartData\n  };\n}\n_s(useNewReleases, \"RWkYmzHkSOGtMSd91DcnLwurEAM=\");","map":{"version":3,"names":["useMemo","useContext","DashboardContext","useNewReleases","_s","state","token","artistData","artistDataChart","title","text","name","tooltip","legend","data","xAxis","yAxis","series","type","followers","popularity","radarChartData","x","orient","left","genres","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/hooks/useArtist.js"],"sourcesContent":["import { useMemo, useContext } from 'react';\r\nimport DashboardContext from '../contexts/generalContext';\r\n\r\nexport default function useNewReleases() {\r\n    const [state, ] = useContext(DashboardContext);\r\n    const {\r\n        token,\r\n        artistData\r\n    } = state;\r\n\r\n    const artistDataChart = useMemo(() =>  ({\r\n            title: {\r\n                text: artistData?.name\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['Datos del Artista']\r\n            },\r\n            xAxis: {\r\n                data: ['Seguidores', 'Popularidad']\r\n            },\r\n            yAxis: {},\r\n            series: {\r\n                type: 'bar',\r\n                data: [\r\n                    artistData?.followers,\r\n                    artistData?.popularity, \r\n                ]\r\n            }\r\n        })\r\n    , [artistData, token]);\r\n\r\n    const radarChartData = useMemo(() => ({\r\n        title: {\r\n            text: 'Generos',\r\n            x:'center'\r\n          },\r\n          tooltip: {},\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: artistData?.genres\r\n          },\r\n          series : [\r\n            {\r\n            name: '访问来源',\r\n            type: 'pie',\r\n            radius : '55%',\r\n            center: ['50%', '60%'],\r\n            data: artistData?.genres,\r\n            itemStyle: {\r\n              emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n            }\r\n          ]\r\n    }), [artistData])\r\n\r\n    return {\r\n        artistDataChart,\r\n        artistData,\r\n        radarChartData\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,4BAA4B;AAEzD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,CAAG,GAAGJ,UAAU,CAACC,gBAAgB,CAAC;EAC9C,MAAM;IACFI,KAAK;IACLC;EACJ,CAAC,GAAGF,KAAK;EAET,MAAMG,eAAe,GAAGR,OAAO,CAAC,OAAQ;IAChCS,KAAK,EAAE;MACHC,IAAI,EAAEH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEI;IACtB,CAAC;IACDC,OAAO,EAAE,CAAC,CAAC;IACXC,MAAM,EAAE;MACJC,IAAI,EAAE,CAAC,mBAAmB;IAC9B,CAAC;IACDC,KAAK,EAAE;MACHD,IAAI,EAAE,CAAC,YAAY,EAAE,aAAa;IACtC,CAAC;IACDE,KAAK,EAAE,CAAC,CAAC;IACTC,MAAM,EAAE;MACJC,IAAI,EAAE,KAAK;MACXJ,IAAI,EAAE,CACFP,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,SAAS,EACrBZ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,UAAU;IAE9B;EACJ,CAAC,CAAC,EACJ,CAACb,UAAU,EAAED,KAAK,CAAC,CAAC;EAEtB,MAAMe,cAAc,GAAGrB,OAAO,CAAC,OAAO;IAClCS,KAAK,EAAE;MACHC,IAAI,EAAE,SAAS;MACfY,CAAC,EAAC;IACJ,CAAC;IACDV,OAAO,EAAE,CAAC,CAAC;IACXC,MAAM,EAAE;MACNU,MAAM,EAAE,UAAU;MAClBC,IAAI,EAAE,MAAM;MACZV,IAAI,EAAEP,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEkB;IACpB,CAAC;IACDR,MAAM,EAAG,CACP;MACAN,IAAI,EAAE,MAAM;MACZO,IAAI,EAAE,KAAK;MACXQ,MAAM,EAAG,KAAK;MACdC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;MACtBb,IAAI,EAAEP,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEkB,MAAM;MACxBG,SAAS,EAAE;QACTC,QAAQ,EAAE;UACVC,UAAU,EAAE,EAAE;UACdC,aAAa,EAAE,CAAC;UAChBC,WAAW,EAAE;QACb;MACF;IACA,CAAC;EAET,CAAC,CAAC,EAAE,CAACzB,UAAU,CAAC,CAAC;EAEjB,OAAO;IACHC,eAAe;IACfD,UAAU;IACVc;EACJ,CAAC;AACL;AAACjB,EAAA,CA/DuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}