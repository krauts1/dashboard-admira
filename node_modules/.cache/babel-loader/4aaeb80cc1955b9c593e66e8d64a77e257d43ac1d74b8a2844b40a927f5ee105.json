{"ast":null,"code":"import{useMemo,useEffect,useCallback,useContext}from'react';import DashboardContext from'../contexts/generalContext';import{getNewReleases}from'../services/provider/tracks';import{getAlbums}from'../services/provider/albums';import{setState}from'../store/actions';export default function useNewReleases(_ref){let{messageApi}=_ref;const[state,dispatch]=useContext(DashboardContext);const{token,newReleasesItems,albumsNewReleases}=state;const newReleases=useMemo(()=>{let options={title:{text:'Nuevos lanzamientos Spotify'},tooltip:{},legend:{data:['Duraci贸n por lanzamiento']},xAxis:{data:[],show:false},yAxis:{}};let data=[];albumsNewReleases.forEach(item=>{var _item$artists;let duration=0;const dataArtist=item===null||item===void 0?void 0:(_item$artists=item.artists)===null||_item$artists===void 0?void 0:_item$artists.map(artist=>artist.name);options.xAxis.data.push(\"\".concat(item.name,\" - \").concat(dataArtist.join('/')));item.tracks.items.forEach(track=>{duration+=Math.round(track.duration_ms/60000);});data.push(duration);});options['series']=[{name:'minutos',type:'bar',data}];return options;},[newReleasesItems,albumsNewReleases,token]);const getNewReleasesData=useCallback(async()=>{try{if(token){const{albums}=await getNewReleases(token);const idsTracks=albums.items.map(item=>item.id).join();const resultAlbums=await getAlbums(token,idsTracks);dispatch(setState({newReleasesItems:albums===null||albums===void 0?void 0:albums.items,albumsNewReleases:resultAlbums===null||resultAlbums===void 0?void 0:resultAlbums.albums}));}}catch(error){messageApi.open({type:'error',content:'Error al obtener la informaci贸n'});}},[token,messageApi]);useEffect(()=>{getNewReleasesData();},[token,messageApi]);return{newReleases};}","map":{"version":3,"names":["useMemo","useEffect","useCallback","useContext","DashboardContext","getNewReleases","getAlbums","setState","useNewReleases","_ref","messageApi","state","dispatch","token","newReleasesItems","albumsNewReleases","newReleases","options","title","text","tooltip","legend","data","xAxis","show","yAxis","forEach","item","_item$artists","duration","dataArtist","artists","map","artist","name","push","concat","join","tracks","items","track","Math","round","duration_ms","type","getNewReleasesData","albums","idsTracks","id","resultAlbums","error","open","content"],"sources":["C:/Users/Admin/Documents/git/dashboard-admira/src/hooks/useNewReleases.js"],"sourcesContent":["import { useMemo, useEffect, useCallback, useContext } from 'react';\r\nimport DashboardContext from '../contexts/generalContext';\r\nimport { getNewReleases } from '../services/provider/tracks';\r\nimport { getAlbums } from '../services/provider/albums';\r\nimport { setState } from '../store/actions';\r\n\r\nexport default function useNewReleases({ messageApi }) {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n    const {\r\n        token,\r\n        newReleasesItems,\r\n        albumsNewReleases\r\n    } = state;\r\n\r\n    const newReleases = useMemo(() => {\r\n        let options = {\r\n            title: {\r\n                text: 'Nuevos lanzamientos Spotify'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['Duraci贸n por lanzamiento']\r\n            },\r\n            xAxis: {\r\n                data: [],\r\n                show: false\r\n            },\r\n            yAxis: {},\r\n        }\r\n        let data = [];\r\n        albumsNewReleases.forEach(item => {\r\n            let duration = 0;\r\n            const dataArtist = item?.artists?.map(artist => artist.name);\r\n            options.xAxis.data.push(`${item.name} - ${dataArtist.join('/')}`);\r\n            item.tracks.items.forEach(track => {\r\n                duration += Math.round(track.duration_ms / 60000);\r\n            });\r\n            data.push(duration);\r\n        });\r\n        options['series'] = [{\r\n            name: 'minutos',\r\n            type: 'bar',\r\n            data\r\n        }];\r\n        return options;\r\n    }, [newReleasesItems, albumsNewReleases, token]);\r\n\r\n    const getNewReleasesData = useCallback(async () => {\r\n        try {\r\n            if (token) {\r\n                const { albums } = await getNewReleases(token);\r\n                const idsTracks = albums.items.map(item => item.id).join();\r\n                const resultAlbums = await getAlbums(token, idsTracks);\r\n                dispatch(setState({\r\n                    newReleasesItems: albums?.items,\r\n                    albumsNewReleases: resultAlbums?.albums\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            messageApi.open({\r\n                type: 'error',\r\n                content: 'Error al obtener la informaci贸n',\r\n            });\r\n        }\r\n    }, [token, messageApi]);\r\n\r\n    useEffect(() => {\r\n        getNewReleasesData();\r\n    }, [token, messageApi]);\r\n\r\n    return {\r\n        newReleases\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}