{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useEffect, useCallback, useContext } from 'react';\nimport DashboardContext from '../contexts/generalContext';\nimport { getNewReleases } from '../services/provider/tracks';\nimport { setState } from '../store/actions';\nexport default function useNewReleases() {\n  _s();\n  const [state, dispatch] = useContext(DashboardContext);\n  const {\n    token,\n    newReleasesItems\n  } = state;\n  const newReleases = useMemo(() => {\n    const idsTracks = newReleasesItems.map(item => item.id).join();\n    console.log(\"elements\", idsTracks);\n  }, [newReleasesItems, token]);\n  const getNewReleasesData = useCallback(async () => {\n    if (token) {\n      const {\n        albums\n      } = await getNewReleases(token);\n      dispatch(setState({\n        newReleasesItems: albums.items\n      }));\n    }\n  }, [token]);\n  useEffect(() => {\n    getNewReleasesData();\n  }, [token]);\n  return {\n    newReleases\n  };\n}\n_s(useNewReleases, \"fZUaLBYFacKnkW672PmXt/LL2+A=\");","map":{"version":3,"names":["useMemo","useEffect","useCallback","useContext","DashboardContext","getNewReleases","setState","useNewReleases","_s","state","dispatch","token","newReleasesItems","newReleases","idsTracks","map","item","id","join","console","log","getNewReleasesData","albums","items"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/hooks/useNewReleases.js"],"sourcesContent":["import { useMemo, useEffect, useCallback, useContext } from 'react';\r\nimport DashboardContext from '../contexts/generalContext';\r\nimport { getNewReleases } from '../services/provider/tracks';\r\nimport { setState } from '../store/actions';\r\n\r\nexport default function useNewReleases() {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n    const { token, newReleasesItems } = state;\r\n\r\n    const newReleases = useMemo(() => {\r\n        const idsTracks = newReleasesItems.map(item => item.id).join();\r\n        console.log(\"elements\", idsTracks)\r\n    }, [newReleasesItems, token]);\r\n\r\n    const getNewReleasesData = useCallback(async () => {\r\n        if(token){\r\n            const { albums } = await getNewReleases(token);\r\n            dispatch(setState({ newReleasesItems: albums.items }));\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        getNewReleasesData();\r\n    }, [token]);\r\n\r\n    return {\r\n        newReleases\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AACnE,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,UAAU,CAACC,gBAAgB,CAAC;EACtD,MAAM;IAAEO,KAAK;IAAEC;EAAiB,CAAC,GAAGH,KAAK;EAEzC,MAAMI,WAAW,GAAGb,OAAO,CAAC,MAAM;IAC9B,MAAMc,SAAS,GAAGF,gBAAgB,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;IAC9DC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,SAAS,CAAC;EACtC,CAAC,EAAE,CAACF,gBAAgB,EAAED,KAAK,CAAC,CAAC;EAE7B,MAAMU,kBAAkB,GAAGnB,WAAW,CAAC,YAAY;IAC/C,IAAGS,KAAK,EAAC;MACL,MAAM;QAAEW;MAAO,CAAC,GAAG,MAAMjB,cAAc,CAACM,KAAK,CAAC;MAC9CD,QAAQ,CAACJ,QAAQ,CAAC;QAAEM,gBAAgB,EAAEU,MAAM,CAACC;MAAM,CAAC,CAAC,CAAC;IAC1D;EACJ,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEXV,SAAS,CAAC,MAAM;IACZoB,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,OAAO;IACHE;EACJ,CAAC;AACL;AAACL,EAAA,CAvBuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}