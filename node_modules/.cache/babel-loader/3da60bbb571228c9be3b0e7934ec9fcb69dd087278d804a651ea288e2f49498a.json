{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useCallback } from 'react';\nimport { setFilter } from '../store/actions';\nimport DashboardContext from '../contexts/generalContext';\nexport default function useFilter() {\n  _s();\n  const [, dispatch] = useContext(DashboardContext);\n  const setSearchType = useCallback((name, type) => {\n    dispatch(setFilter({\n      [type]: name\n    }));\n  }, []);\n  return {\n    setSearchType\n  };\n}\n_s(useFilter, \"CErIrT17cxtzw3aAz97Tu8ZFgCY=\");","map":{"version":3,"names":["useContext","useCallback","setFilter","DashboardContext","useFilter","_s","dispatch","setSearchType","name","type"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/hooks/useFilter.js"],"sourcesContent":["import { useContext, useCallback } from 'react';\r\nimport { setFilter } from '../store/actions';\r\nimport DashboardContext from '../contexts/generalContext';\r\n\r\nexport default function useFilter(){\r\n    const [, dispatch] = useContext(DashboardContext);\r\n    \r\n    const setSearchType = useCallback((name, type) => {\r\n        dispatch(setFilter({[type]: name}))\r\n    }, [])\r\n\r\n    return {\r\n        setSearchType\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,gBAAgB,MAAM,4BAA4B;AAEzD,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAC/B,MAAM,GAAGC,QAAQ,CAAC,GAAGN,UAAU,CAACG,gBAAgB,CAAC;EAEjD,MAAMI,aAAa,GAAGN,WAAW,CAAC,CAACO,IAAI,EAAEC,IAAI,KAAK;IAC9CH,QAAQ,CAACJ,SAAS,CAAC;MAAC,CAACO,IAAI,GAAGD;IAAI,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHD;EACJ,CAAC;AACL;AAACF,EAAA,CAVuBD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}