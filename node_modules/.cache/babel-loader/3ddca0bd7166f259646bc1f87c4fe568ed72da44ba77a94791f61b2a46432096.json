{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useEffect, useCallback, useContext } from 'react';\nimport DashboardContext from '../contexts/generalContext';\nimport { getNewReleases } from '../services/provider/tracks';\nimport { getAlbums } from '../services/provider/albums';\nimport { setState } from '../store/actions';\nexport default function useNewReleases() {\n  _s();\n  const [state, dispatch] = useContext(DashboardContext);\n  const {\n    token,\n    newReleasesItems\n  } = state;\n\n  // const newReleases = useMemo(() => {\n\n  //     console.log(\"elements\", idsTracks)\n  // }, [newReleasesItems, token]);\n\n  const getNewReleasesData = useCallback(async () => {\n    if (token) {\n      const {\n        albums\n      } = await getNewReleases(token);\n      const idsTracks = albums.items.map(item => item.id).join();\n      const resultAlbums = await getAlbums(token, idsTracks);\n      console.log(\"resultAlbums\", resultAlbums);\n      dispatch(setState({\n        newReleasesItems: albums.items\n      }));\n    }\n  }, [token]);\n  useEffect(() => {\n    getNewReleasesData();\n  }, [token]);\n  return {\n    // newReleases\n  };\n}\n_s(useNewReleases, \"rSqyo9q1na1eHig1+wyQqmla79E=\");","map":{"version":3,"names":["useMemo","useEffect","useCallback","useContext","DashboardContext","getNewReleases","getAlbums","setState","useNewReleases","_s","state","dispatch","token","newReleasesItems","getNewReleasesData","albums","idsTracks","items","map","item","id","join","resultAlbums","console","log"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/hooks/useNewReleases.js"],"sourcesContent":["import { useMemo, useEffect, useCallback, useContext } from 'react';\r\nimport DashboardContext from '../contexts/generalContext';\r\nimport { getNewReleases } from '../services/provider/tracks';\r\nimport { getAlbums } from '../services/provider/albums';\r\nimport { setState } from '../store/actions';\r\n\r\nexport default function useNewReleases() {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n    const { token, newReleasesItems } = state;\r\n\r\n    // const newReleases = useMemo(() => {\r\n        \r\n    //     console.log(\"elements\", idsTracks)\r\n    // }, [newReleasesItems, token]);\r\n\r\n    const getNewReleasesData = useCallback(async () => {\r\n        if(token){\r\n            const { albums } = await getNewReleases(token);\r\n            const idsTracks = albums.items.map(item => item.id).join();\r\n            const resultAlbums = await getAlbums(token, idsTracks);\r\n            console.log(\"resultAlbums\", resultAlbums);\r\n            dispatch(setState({ newReleasesItems: albums.items }));\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        getNewReleasesData();\r\n    }, [token]);\r\n\r\n    return {\r\n        // newReleases\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AACnE,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,UAAU,CAACC,gBAAgB,CAAC;EACtD,MAAM;IAAEQ,KAAK;IAAEC;EAAiB,CAAC,GAAGH,KAAK;;EAEzC;;EAEA;EACA;;EAEA,MAAMI,kBAAkB,GAAGZ,WAAW,CAAC,YAAY;IAC/C,IAAGU,KAAK,EAAC;MACL,MAAM;QAAEG;MAAO,CAAC,GAAG,MAAMV,cAAc,CAACO,KAAK,CAAC;MAC9C,MAAMI,SAAS,GAAGD,MAAM,CAACE,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;MAC1D,MAAMC,YAAY,GAAG,MAAMhB,SAAS,CAACM,KAAK,EAAEI,SAAS,CAAC;MACtDO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,YAAY,CAAC;MACzCX,QAAQ,CAACJ,QAAQ,CAAC;QAAEM,gBAAgB,EAAEE,MAAM,CAACE;MAAM,CAAC,CAAC,CAAC;IAC1D;EACJ,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEXX,SAAS,CAAC,MAAM;IACZa,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,OAAO;IACH;EAAA,CACH;AACL;AAACH,EAAA,CA1BuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}