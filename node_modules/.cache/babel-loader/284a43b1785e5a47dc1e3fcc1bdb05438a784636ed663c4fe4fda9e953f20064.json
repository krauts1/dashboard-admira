{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useEffect, useCallback, useContext } from 'react';\nimport DashboardContext from '../contexts/generalContext';\nimport { getNewReleases } from '../services/provider/tracks';\nimport { getAlbums } from '../services/provider/albums';\nimport { setState } from '../store/actions';\nexport default function useNewReleases({\n  messageApi\n}) {\n  _s();\n  const [state, dispatch] = useContext(DashboardContext);\n  const {\n    token,\n    newReleasesItems,\n    albumsNewReleases\n  } = state;\n  const newReleases = useMemo(() => {\n    let options = {\n      title: {\n        text: 'Nuevos lanzamientos Spotify'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Duración por lanzamiento']\n      },\n      xAxis: {\n        data: []\n      },\n      yAxis: {}\n    };\n    let data = [];\n    albumsNewReleases.forEach(item => {\n      let duration = 0;\n      options.xAxis.data.push(item.name);\n      item.tracks.items.forEach(track => {\n        duration += Math.round(track.duration_ms / 60000);\n      });\n      data.push(duration);\n    });\n    options['series'] = [{\n      name: 'minutos',\n      type: 'bar',\n      data\n    }];\n    return options;\n  }, [newReleasesItems, albumsNewReleases, token]);\n  const getNewReleasesData = useCallback(async () => {\n    if (token) {\n      const {\n        albums\n      } = await getNewReleases(token);\n      const idsTracks = albums.items.map(item => item.id).join();\n      const resultAlbums = await getAlbums(token, idsTracks);\n      dispatch(setState({\n        newReleasesItems: albums === null || albums === void 0 ? void 0 : albums.items,\n        albumsNewReleases: resultAlbums === null || resultAlbums === void 0 ? void 0 : resultAlbums.albums\n      }));\n    }\n  }, [token]);\n  useEffect(() => {\n    getNewReleasesData();\n    setState(messageApi);\n  }, [token, messageApi]);\n  return {\n    newReleases\n  };\n}\n_s(useNewReleases, \"fZUaLBYFacKnkW672PmXt/LL2+A=\");","map":{"version":3,"names":["useMemo","useEffect","useCallback","useContext","DashboardContext","getNewReleases","getAlbums","setState","useNewReleases","messageApi","_s","state","dispatch","token","newReleasesItems","albumsNewReleases","newReleases","options","title","text","tooltip","legend","data","xAxis","yAxis","forEach","item","duration","push","name","tracks","items","track","Math","round","duration_ms","type","getNewReleasesData","albums","idsTracks","map","id","join","resultAlbums"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/hooks/useNewReleases.js"],"sourcesContent":["import { useMemo, useEffect, useCallback, useContext } from 'react';\r\nimport DashboardContext from '../contexts/generalContext';\r\nimport { getNewReleases } from '../services/provider/tracks';\r\nimport { getAlbums } from '../services/provider/albums';\r\nimport { setState } from '../store/actions';\r\n\r\nexport default function useNewReleases({messageApi}) {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n    const {\r\n        token,\r\n        newReleasesItems,\r\n        albumsNewReleases\r\n    } = state;\r\n\r\n    const newReleases = useMemo(() => {\r\n        let options = {\r\n            title: {\r\n                text: 'Nuevos lanzamientos Spotify'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['Duración por lanzamiento']\r\n            },\r\n            xAxis: {\r\n                data: []\r\n            },\r\n            yAxis: {},\r\n        }\r\n        let data = [];\r\n        albumsNewReleases.forEach(item => {\r\n            let duration = 0;\r\n            options.xAxis.data.push(item.name);\r\n            item.tracks.items.forEach(track => {\r\n                duration += Math.round(track.duration_ms / 60000);\r\n            });\r\n            data.push(duration);\r\n        });\r\n        options['series'] = [{\r\n            name: 'minutos',\r\n            type: 'bar',\r\n            data\r\n        }];\r\n        return options;\r\n    }, [newReleasesItems, albumsNewReleases, token]);\r\n\r\n    const getNewReleasesData = useCallback(async () => {\r\n        if (token) {\r\n            const { albums } = await getNewReleases(token);\r\n            const idsTracks = albums.items.map(item => item.id).join();\r\n            const resultAlbums = await getAlbums(token, idsTracks);\r\n            dispatch(setState({\r\n                newReleasesItems: albums?.items,\r\n                albumsNewReleases: resultAlbums?.albums\r\n            }));\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        getNewReleasesData();\r\n        setState(messageApi);\r\n    }, [token, messageApi]);\r\n\r\n    return {\r\n        newReleases\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AACnE,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,eAAe,SAASC,cAAcA,CAAC;EAACC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,UAAU,CAACC,gBAAgB,CAAC;EACtD,MAAM;IACFS,KAAK;IACLC,gBAAgB;IAChBC;EACJ,CAAC,GAAGJ,KAAK;EAET,MAAMK,WAAW,GAAGhB,OAAO,CAAC,MAAM;IAC9B,IAAIiB,OAAO,GAAG;MACVC,KAAK,EAAE;QACHC,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MACXC,MAAM,EAAE;QACJC,IAAI,EAAE,CAAC,0BAA0B;MACrC,CAAC;MACDC,KAAK,EAAE;QACHD,IAAI,EAAE;MACV,CAAC;MACDE,KAAK,EAAE,CAAC;IACZ,CAAC;IACD,IAAIF,IAAI,GAAG,EAAE;IACbP,iBAAiB,CAACU,OAAO,CAACC,IAAI,IAAI;MAC9B,IAAIC,QAAQ,GAAG,CAAC;MAChBV,OAAO,CAACM,KAAK,CAACD,IAAI,CAACM,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC;MAClCH,IAAI,CAACI,MAAM,CAACC,KAAK,CAACN,OAAO,CAACO,KAAK,IAAI;QAC/BL,QAAQ,IAAIM,IAAI,CAACC,KAAK,CAACF,KAAK,CAACG,WAAW,GAAG,KAAK,CAAC;MACrD,CAAC,CAAC;MACFb,IAAI,CAACM,IAAI,CAACD,QAAQ,CAAC;IACvB,CAAC,CAAC;IACFV,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;MACjBY,IAAI,EAAE,SAAS;MACfO,IAAI,EAAE,KAAK;MACXd;IACJ,CAAC,CAAC;IACF,OAAOL,OAAO;EAClB,CAAC,EAAE,CAACH,gBAAgB,EAAEC,iBAAiB,EAAEF,KAAK,CAAC,CAAC;EAEhD,MAAMwB,kBAAkB,GAAGnC,WAAW,CAAC,YAAY;IAC/C,IAAIW,KAAK,EAAE;MACP,MAAM;QAAEyB;MAAO,CAAC,GAAG,MAAMjC,cAAc,CAACQ,KAAK,CAAC;MAC9C,MAAM0B,SAAS,GAAGD,MAAM,CAACP,KAAK,CAACS,GAAG,CAACd,IAAI,IAAIA,IAAI,CAACe,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;MAC1D,MAAMC,YAAY,GAAG,MAAMrC,SAAS,CAACO,KAAK,EAAE0B,SAAS,CAAC;MACtD3B,QAAQ,CAACL,QAAQ,CAAC;QACdO,gBAAgB,EAAEwB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEP,KAAK;QAC/BhB,iBAAiB,EAAE4B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEL;MACrC,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,EAAE,CAACzB,KAAK,CAAC,CAAC;EAEXZ,SAAS,CAAC,MAAM;IACZoC,kBAAkB,CAAC,CAAC;IACpB9B,QAAQ,CAACE,UAAU,CAAC;EACxB,CAAC,EAAE,CAACI,KAAK,EAAEJ,UAAU,CAAC,CAAC;EAEvB,OAAO;IACHO;EACJ,CAAC;AACL;AAACN,EAAA,CA3DuBF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}