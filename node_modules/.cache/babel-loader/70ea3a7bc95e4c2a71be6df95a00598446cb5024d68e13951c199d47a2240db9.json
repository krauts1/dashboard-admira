{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { googleAnaliticsMock } from '../__mocks__/googleAnalitisMock';\nexport default function useNewReleases() {\n  _s();\n  const visitsDataChart = useMemo(() => {\n    return {\n      title: {\n        text: 'Visitas a la pagina'\n      },\n      tooltip: {},\n      xAxis: {\n        type: 'category',\n        data: googleAnaliticsMock.vistasPagina.map(item => item.fecha)\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: {\n        type: 'bar',\n        data: googleAnaliticsMock.vistasPagina.map(item => item.vistas)\n      }\n    };\n  }, [googleAnaliticsMock]);\n  const sesionesChartData = useMemo(() => ({\n    title: {\n      text: 'Sesiones',\n      x: 'center'\n    },\n    xAxis: {\n      type: 'category',\n      data: googleAnaliticsMock.sesiones.map(item => item.fecha),\n      axisLabel: {\n        rotate: 90,\n        margin: 1\n      }\n    },\n    yAxis: {\n      type: 'value'\n    },\n    tooltip: {},\n    series: [{\n      name: 'Tasa de rebote',\n      data: googleAnaliticsMock.sesiones.map(item => ({\n        value: item.sesiones,\n        name: item.tasaRebote\n      })),\n      type: 'line',\n      symbol: 'triangle',\n      symbolSize: 20,\n      lineStyle: {\n        color: '#5470C6',\n        width: 3,\n        type: 'dashed'\n      },\n      itemStyle: {\n        borderWidth: 1,\n        borderColor: '#EE6666',\n        color: 'yellow'\n      }\n    }]\n  }), [googleAnaliticsMock]);\n  const genreData = useMemo(() => ({\n    tooltip: {\n      trigger: 'item'\n    },\n    legend: {\n      top: '5%',\n      left: 'center'\n    },\n    series: [{\n      name: 'Genero',\n      type: 'pie',\n      radius: ['40%', '70%'],\n      center: ['50%', '70%'],\n      startAngle: 180,\n      endAngle: 360,\n      data: googleAnaliticsMock.demografía.genero.map(item => ({\n        value: item.porcentaje,\n        name: item.tipo\n      }))\n    }]\n  }), [googleAnaliticsMock]);\n  const ageData = useMemo(() => ({\n    title: {\n      text: 'Edad',\n      left: 'center'\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    legend: {\n      orient: 'vertical',\n      left: 'left'\n    },\n    series: [{\n      name: 'Edad',\n      type: 'pie',\n      radius: '50%',\n      data: googleAnaliticsMock.demografía.edad.map(item => ({\n        value: item.porcentaje,\n        name: item.tipo\n      })),\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  }), [googleAnaliticsMock]);\n  return {\n    visitsDataChart,\n    sesionesChartData,\n    genreData,\n    ageData\n  };\n}\n_s(useNewReleases, \"G2yrqY4Q74J4hTegIvxUhGoqAbo=\");","map":{"version":3,"names":["useMemo","googleAnaliticsMock","useNewReleases","_s","visitsDataChart","title","text","tooltip","xAxis","type","data","vistasPagina","map","item","fecha","yAxis","series","vistas","sesionesChartData","x","sesiones","axisLabel","rotate","margin","name","value","tasaRebote","symbol","symbolSize","lineStyle","color","width","itemStyle","borderWidth","borderColor","genreData","trigger","legend","top","left","radius","center","startAngle","endAngle","demografía","genero","porcentaje","tipo","ageData","orient","edad","emphasis","shadowBlur","shadowOffsetX","shadowColor"],"sources":["C:/Users/Admin/Documents/git/dashboard-admira/src/hooks/useGoogleAnalitics.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport { googleAnaliticsMock } from '../__mocks__/googleAnalitisMock';\r\n\r\nexport default function useNewReleases() {\r\n\r\n    const visitsDataChart = useMemo(() => {\r\n        return {\r\n            title: {\r\n                text: 'Visitas a la pagina'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                type: 'category',\r\n                data: googleAnaliticsMock.vistasPagina.map(item => item.fecha)\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: {\r\n                type: 'bar',\r\n                data: googleAnaliticsMock.vistasPagina.map(item => item.vistas)\r\n            }\r\n        }\r\n    }\r\n        , [googleAnaliticsMock]);\r\n\r\n    const sesionesChartData = useMemo(() => ({\r\n        title: {\r\n            text: 'Sesiones',\r\n            x: 'center'\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: googleAnaliticsMock.sesiones.map(item => item.fecha),\r\n            axisLabel: {\r\n                rotate: 90,\r\n                margin: 1\r\n              }\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        tooltip: {},\r\n        series: [\r\n            {\r\n                name: 'Tasa de rebote',\r\n                data: googleAnaliticsMock.sesiones.map(item => ({\r\n                    value: item.sesiones,\r\n                    name: item.tasaRebote\r\n                })),\r\n                type: 'line',\r\n                symbol: 'triangle',\r\n                symbolSize: 20,\r\n                lineStyle: {\r\n                  color: '#5470C6',\r\n                  width: 3,\r\n                  type: 'dashed'\r\n                },\r\n                itemStyle: {\r\n                  borderWidth: 1,\r\n                  borderColor: '#EE6666',\r\n                  color: 'yellow'\r\n                },\r\n\r\n              }\r\n        ]\r\n    }), [googleAnaliticsMock]);\r\n\r\n    const genreData = useMemo(() => ({\r\n        tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            top: '5%',\r\n            left: 'center'\r\n          },\r\n          series: [\r\n            {\r\n              name: 'Genero',\r\n              type: 'pie',\r\n              radius: ['40%', '70%'],\r\n              center: ['50%', '70%'],\r\n              startAngle: 180,\r\n              endAngle: 360,\r\n              data: googleAnaliticsMock.demografía.genero.map(item => ({\r\n                value: item.porcentaje,\r\n                name: item.tipo\r\n              }))\r\n            }\r\n          ]\r\n    }), [googleAnaliticsMock]);\r\n\r\n    const ageData = useMemo(() => ({\r\n        title: {\r\n            text: 'Edad',\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left'\r\n          },\r\n          series: [\r\n            {\r\n              name: 'Edad',\r\n              type: 'pie',\r\n              radius: '50%',\r\n              data: googleAnaliticsMock.demografía.edad.map(item => ({\r\n                value: item.porcentaje,\r\n                name: item.tipo\r\n              })),\r\n              emphasis: {\r\n                itemStyle: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n    }), [googleAnaliticsMock]);\r\n\r\n    return {\r\n        visitsDataChart,\r\n        sesionesChartData,\r\n        genreData,\r\n        ageData,\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,QAAQ,iCAAiC;AAErE,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAErC,MAAMC,eAAe,GAAGJ,OAAO,CAAC,MAAM;IAClC,OAAO;MACHK,KAAK,EAAE;QACHC,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MACXC,KAAK,EAAE;QACHC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAET,mBAAmB,CAACU,YAAY,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK;MACjE,CAAC;MACDC,KAAK,EAAE;QACHN,IAAI,EAAE;MACV,CAAC;MACDO,MAAM,EAAE;QACJP,IAAI,EAAE,KAAK;QACXC,IAAI,EAAET,mBAAmB,CAACU,YAAY,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,MAAM;MAClE;IACJ,CAAC;EACL,CAAC,EACK,CAAChB,mBAAmB,CAAC,CAAC;EAE5B,MAAMiB,iBAAiB,GAAGlB,OAAO,CAAC,OAAO;IACrCK,KAAK,EAAE;MACHC,IAAI,EAAE,UAAU;MAChBa,CAAC,EAAE;IACP,CAAC;IACDX,KAAK,EAAE;MACHC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAET,mBAAmB,CAACmB,QAAQ,CAACR,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;MAC1DO,SAAS,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV;IACN,CAAC;IACDR,KAAK,EAAE;MACHN,IAAI,EAAE;IACV,CAAC;IACDF,OAAO,EAAE,CAAC,CAAC;IACXS,MAAM,EAAE,CACJ;MACIQ,IAAI,EAAE,gBAAgB;MACtBd,IAAI,EAAET,mBAAmB,CAACmB,QAAQ,CAACR,GAAG,CAACC,IAAI,KAAK;QAC5CY,KAAK,EAAEZ,IAAI,CAACO,QAAQ;QACpBI,IAAI,EAAEX,IAAI,CAACa;MACf,CAAC,CAAC,CAAC;MACHjB,IAAI,EAAE,MAAM;MACZkB,MAAM,EAAE,UAAU;MAClBC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;QACTC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,CAAC;QACRtB,IAAI,EAAE;MACR,CAAC;MACDuB,SAAS,EAAE;QACTC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE,SAAS;QACtBJ,KAAK,EAAE;MACT;IAEF,CAAC;EAEX,CAAC,CAAC,EAAE,CAAC7B,mBAAmB,CAAC,CAAC;EAE1B,MAAMkC,SAAS,GAAGnC,OAAO,CAAC,OAAO;IAC7BO,OAAO,EAAE;MACL6B,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNC,GAAG,EAAE,IAAI;MACTC,IAAI,EAAE;IACR,CAAC;IACDvB,MAAM,EAAE,CACN;MACEQ,IAAI,EAAE,QAAQ;MACdf,IAAI,EAAE,KAAK;MACX+B,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;MACtBC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;MACtBC,UAAU,EAAE,GAAG;MACfC,QAAQ,EAAE,GAAG;MACbjC,IAAI,EAAET,mBAAmB,CAAC2C,UAAU,CAACC,MAAM,CAACjC,GAAG,CAACC,IAAI,KAAK;QACvDY,KAAK,EAAEZ,IAAI,CAACiC,UAAU;QACtBtB,IAAI,EAAEX,IAAI,CAACkC;MACb,CAAC,CAAC;IACJ,CAAC;EAET,CAAC,CAAC,EAAE,CAAC9C,mBAAmB,CAAC,CAAC;EAE1B,MAAM+C,OAAO,GAAGhD,OAAO,CAAC,OAAO;IAC3BK,KAAK,EAAE;MACHC,IAAI,EAAE,MAAM;MACZiC,IAAI,EAAE;IACR,CAAC;IACDhC,OAAO,EAAE;MACP6B,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNY,MAAM,EAAE,UAAU;MAClBV,IAAI,EAAE;IACR,CAAC;IACDvB,MAAM,EAAE,CACN;MACEQ,IAAI,EAAE,MAAM;MACZf,IAAI,EAAE,KAAK;MACX+B,MAAM,EAAE,KAAK;MACb9B,IAAI,EAAET,mBAAmB,CAAC2C,UAAU,CAACM,IAAI,CAACtC,GAAG,CAACC,IAAI,KAAK;QACrDY,KAAK,EAAEZ,IAAI,CAACiC,UAAU;QACtBtB,IAAI,EAAEX,IAAI,CAACkC;MACb,CAAC,CAAC,CAAC;MACHI,QAAQ,EAAE;QACRnB,SAAS,EAAE;UACToB,UAAU,EAAE,EAAE;UACdC,aAAa,EAAE,CAAC;UAChBC,WAAW,EAAE;QACf;MACF;IACF,CAAC;EAET,CAAC,CAAC,EAAE,CAACrD,mBAAmB,CAAC,CAAC;EAE1B,OAAO;IACHG,eAAe;IACfc,iBAAiB;IACjBiB,SAAS;IACTa;EACJ,CAAC;AACL;AAAC7C,EAAA,CA/HuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}