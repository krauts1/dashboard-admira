{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\git\\\\Dinametra\\\\dashboard-dimitra\\\\src\\\\components\\\\container\\\\container.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport DashboardContext from '../../contexts/generalContext';\nimport useNewReleases from '../../hooks/useNewReleases';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = () => {\n  _s();\n  const [state, dispatch] = useContext(DashboardContext);\n  useNewReleases();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Container, \"URgXf3Wkl7DIqvwezi+ccMZLrpE=\", false, function () {\n  return [useNewReleases];\n});\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","DashboardContext","useNewReleases","jsxDEV","_jsxDEV","Container","_s","state","dispatch","useContext","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/components/container/container.jsx"],"sourcesContent":["import React from 'react';\r\nimport DashboardContext from '../../contexts/generalContext';\r\nimport useNewReleases from '../../hooks/useNewReleases';\r\nconst Container = () => {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n\r\n    useNewReleases();\r\n    \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Container;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,UAAU,CAACR,gBAAgB,CAAC;EAEtDC,cAAc,CAAC,CAAC;EAEhB,oBACIE,OAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAAAP,EAAA,CAVKD,SAAS;EAAA,QAGXH,cAAc;AAAA;AAAAY,EAAA,GAHZT,SAAS;AAWf,eAAeA,SAAS;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}