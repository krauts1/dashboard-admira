{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useEffect, useCallback, useContext } from 'react';\nimport DashboardContext from '../contexts/generalContext';\nimport { getNewReleases } from '../services/provider/tracks';\nimport { getAlbums } from '../services/provider/albums';\nimport { setState } from '../store/actions';\nexport default function useNewReleases() {\n  _s();\n  const [state, dispatch] = useContext(DashboardContext);\n  const {\n    token,\n    newReleasesItems,\n    albumsNewReleases\n  } = state;\n  console.log(\"los datos\", newReleasesItems, albumsNewReleases);\n  const newReleases = useMemo(() => {\n    let options = {\n      title: {\n        text: 'Nuevos lanzamientos'\n      },\n      tooltip: {},\n      legend: {\n        data: ['Duración por lanzamiento']\n      }\n    };\n    // const albumsNewReleases.map(item => ({\n\n    // }));\n  }, [newReleasesItems, albumsNewReleases, token]);\n  const getNewReleasesData = useCallback(async () => {\n    if (token) {\n      const {\n        albums\n      } = await getNewReleases(token);\n      const idsTracks = albums.items.map(item => item.id).join();\n      const resultAlbums = await getAlbums(token, idsTracks);\n      dispatch(setState({\n        newReleasesItems: albums === null || albums === void 0 ? void 0 : albums.items,\n        albumsNewReleases: resultAlbums === null || resultAlbums === void 0 ? void 0 : resultAlbums.albums\n      }));\n    }\n  }, [token]);\n  useEffect(() => {\n    getNewReleasesData();\n  }, [token]);\n  return {\n    newReleases\n  };\n}\n_s(useNewReleases, \"fZUaLBYFacKnkW672PmXt/LL2+A=\");","map":{"version":3,"names":["useMemo","useEffect","useCallback","useContext","DashboardContext","getNewReleases","getAlbums","setState","useNewReleases","_s","state","dispatch","token","newReleasesItems","albumsNewReleases","console","log","newReleases","options","title","text","tooltip","legend","data","getNewReleasesData","albums","idsTracks","items","map","item","id","join","resultAlbums"],"sources":["C:/Users/Admin/Documents/git/Dinametra/dashboard-dimitra/src/hooks/useNewReleases.js"],"sourcesContent":["import { useMemo, useEffect, useCallback, useContext } from 'react';\r\nimport DashboardContext from '../contexts/generalContext';\r\nimport { getNewReleases } from '../services/provider/tracks';\r\nimport { getAlbums } from '../services/provider/albums';\r\nimport { setState } from '../store/actions';\r\n\r\nexport default function useNewReleases() {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n    const {\r\n        token,\r\n        newReleasesItems,\r\n        albumsNewReleases\r\n    } = state;\r\n\r\n    console.log(\"los datos\", newReleasesItems, albumsNewReleases)\r\n    const newReleases = useMemo(() => {\r\n        let options = {\r\n            title: {\r\n                text: 'Nuevos lanzamientos'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['Duración por lanzamiento']\r\n            },\r\n        }\r\n        // const albumsNewReleases.map(item => ({\r\n\r\n        // }));\r\n    }, [newReleasesItems, albumsNewReleases, token]);\r\n\r\n    const getNewReleasesData = useCallback(async () => {\r\n        if (token) {\r\n            const { albums } = await getNewReleases(token);\r\n            const idsTracks = albums.items.map(item => item.id).join();\r\n            const resultAlbums = await getAlbums(token, idsTracks);\r\n            dispatch(setState({\r\n                newReleasesItems: albums?.items,\r\n                albumsNewReleases: resultAlbums?.albums\r\n            }));\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        getNewReleasesData();\r\n    }, [token]);\r\n\r\n    return {\r\n        newReleases\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AACnE,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,UAAU,CAACC,gBAAgB,CAAC;EACtD,MAAM;IACFQ,KAAK;IACLC,gBAAgB;IAChBC;EACJ,CAAC,GAAGJ,KAAK;EAETK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,gBAAgB,EAAEC,iBAAiB,CAAC;EAC7D,MAAMG,WAAW,GAAGjB,OAAO,CAAC,MAAM;IAC9B,IAAIkB,OAAO,GAAG;MACVC,KAAK,EAAE;QACHC,IAAI,EAAE;MACV,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MACXC,MAAM,EAAE;QACJC,IAAI,EAAE,CAAC,0BAA0B;MACrC;IACJ,CAAC;IACD;;IAEA;EACJ,CAAC,EAAE,CAACV,gBAAgB,EAAEC,iBAAiB,EAAEF,KAAK,CAAC,CAAC;EAEhD,MAAMY,kBAAkB,GAAGtB,WAAW,CAAC,YAAY;IAC/C,IAAIU,KAAK,EAAE;MACP,MAAM;QAAEa;MAAO,CAAC,GAAG,MAAMpB,cAAc,CAACO,KAAK,CAAC;MAC9C,MAAMc,SAAS,GAAGD,MAAM,CAACE,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;MAC1D,MAAMC,YAAY,GAAG,MAAM1B,SAAS,CAACM,KAAK,EAAEc,SAAS,CAAC;MACtDf,QAAQ,CAACJ,QAAQ,CAAC;QACdM,gBAAgB,EAAEY,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,KAAK;QAC/Bb,iBAAiB,EAAEkB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEP;MACrC,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEXX,SAAS,CAAC,MAAM;IACZuB,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,OAAO;IACHK;EACJ,CAAC;AACL;AAACR,EAAA,CA3CuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}