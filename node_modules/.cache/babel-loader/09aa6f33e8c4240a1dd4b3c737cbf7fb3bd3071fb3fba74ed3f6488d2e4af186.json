{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useContext, useEffect } from 'react';\nimport { campaignsData } from '../__mocks__/googleAdsMock';\nimport { setState } from '../store/actions';\nimport DashboardContext from '../contexts/generalContext';\nexport default function useGoogleAds() {\n  _s();\n  const [state, dispatch] = useContext(DashboardContext);\n  const {\n    filterCampains\n  } = state;\n  const costData = useMemo(() => {\n    const data = filterCampains.reduce((acc, campaign) => {\n      const cost = campaign.costo;\n      if (cost <= 100) {\n        acc[\"<=100\"]++;\n      } else if (cost >= 101 && cost <= 250) {\n        acc[\"101-250\"]++;\n      } else if (cost >= 251 && cost <= 400) {\n        acc[\"251-400\"]++;\n      } else if (cost >= 401) {\n        acc[\"401+\"]++;\n      }\n      return acc;\n    }, {\n      \"<=100\": 0,\n      \"101-250\": 0,\n      \"251-400\": 0,\n      \"401+\": 0\n    });\n    let items = [];\n    Object.entries(data).forEach(([key, value]) => {\n      items.push({\n        value,\n        name: key\n      });\n    });\n    return {\n      title: {\n        text: 'Costo',\n        subtext: 'por campaña',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [{\n        name: 'Costo',\n        type: 'pie',\n        radius: '50%',\n        data: items,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n  }, [filterCampains]);\n  const topCampaignsData = useMemo(() => {\n    const topCampaigns = filterCampains.sort((a, b) => b.clics - a.clics).slice(0, 5);\n    return {\n      title: {\n        text: '5 campañas con mas clics'\n      },\n      tooltip: {},\n      xAxis: {\n        type: 'category',\n        data: topCampaigns.map(item => item.nombre),\n        axisLabel: {\n          rotate: 90,\n          margin: 1\n        }\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: {\n        type: 'bar',\n        data: topCampaigns.map(item => item.clics)\n      }\n    };\n  }, [filterCampains]);\n  const topCampaignsImpressionsData = useMemo(() => {\n    const topCampaigns = filterCampains.sort((a, b) => b.impresiones - a.impresiones).slice(0, 5);\n    return {\n      title: {\n        text: '5 campañas con mas impresiones'\n      },\n      tooltip: {},\n      xAxis: {\n        max: 'dataMax'\n      },\n      yAxis: {\n        type: 'category',\n        data: topCampaigns.map(item => item.nombre),\n        inverse: true,\n        animationDuration: 300,\n        animationDurationUpdate: 300\n      },\n      series: [{\n        realtimeSort: true,\n        name: 'X',\n        type: 'bar',\n        data: topCampaigns.map(item => item.impresiones),\n        label: {\n          show: true,\n          position: 'right',\n          valueAnimation: true\n        }\n      }]\n    };\n  }, [filterCampains]);\n  useEffect(() => {\n    if (filterCampains.length && !areAllPropertiesEmpty(filters)) messageApi.open({\n      type: 'error',\n      content: 'No se encontraron coincidencias'\n    });\n  }, [filterCampains]);\n  useEffect(() => {\n    dispatch(setState({\n      campaigns: campaignsData.campanas,\n      filterCampains: campaignsData.campanas\n    }));\n  }, []);\n  return {\n    costData,\n    topCampaignsData,\n    topCampaignsImpressionsData,\n    filterCampains\n  };\n}\n_s(useGoogleAds, \"6YOZ+Cy3vZ/YbjKrX+Cx4yVI8mA=\");","map":{"version":3,"names":["useMemo","useContext","useEffect","campaignsData","setState","DashboardContext","useGoogleAds","_s","state","dispatch","filterCampains","costData","data","reduce","acc","campaign","cost","costo","items","Object","entries","forEach","key","value","push","name","title","text","subtext","left","tooltip","trigger","legend","orient","series","type","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","topCampaignsData","topCampaigns","sort","a","b","clics","slice","xAxis","map","item","nombre","axisLabel","rotate","margin","yAxis","topCampaignsImpressionsData","impresiones","max","inverse","animationDuration","animationDurationUpdate","realtimeSort","label","show","position","valueAnimation","length","areAllPropertiesEmpty","filters","messageApi","open","content","campaigns","campanas"],"sources":["C:/Users/Admin/Documents/git/dashboard-admira/src/hooks/useGoogleAds.js"],"sourcesContent":["import { useMemo, useContext, useEffect } from 'react';\r\nimport { campaignsData } from '../__mocks__/googleAdsMock';\r\nimport { setState } from '../store/actions';\r\nimport DashboardContext from '../contexts/generalContext';\r\n\r\nexport default function useGoogleAds() {\r\n    const [state, dispatch] = useContext(DashboardContext);\r\n    const { filterCampains } = state;\r\n\r\n    const costData = useMemo(() => {\r\n        const data = filterCampains.reduce((acc, campaign) => {\r\n            const cost = campaign.costo;\r\n            if (cost <= 100) {\r\n                acc[\"<=100\"]++;\r\n            } else if (cost >= 101 && cost <= 250) {\r\n                acc[\"101-250\"]++;\r\n            } else if (cost >= 251 && cost <= 400) {\r\n                acc[\"251-400\"]++;\r\n            } else if (cost >= 401) {\r\n                acc[\"401+\"]++;\r\n            }\r\n    \r\n            return acc;\r\n        }, {\r\n            \"<=100\": 0,\r\n            \"101-250\": 0,\r\n            \"251-400\": 0,\r\n            \"401+\": 0\r\n        });\r\n        let items = [];\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            items.push({\r\n                value,\r\n                name: key\r\n            });\r\n          })\r\n        return {\r\n            title: {\r\n                text: 'Costo',\r\n                subtext: 'por campaña',\r\n                left: 'center'\r\n              },\r\n              tooltip: {\r\n                trigger: 'item'\r\n              },\r\n              legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n              },\r\n              series: [\r\n                {\r\n                  name: 'Costo',\r\n                  type: 'pie',\r\n                  radius: '50%',\r\n                  data: items,\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n        }\r\n    }, [filterCampains]);\r\n\r\n    const topCampaignsData = useMemo(() => {\r\n        const topCampaigns = filterCampains\r\n        .sort((a, b) => b.clics - a.clics)  \r\n        .slice(0, 5);\r\n        return {\r\n            title: {\r\n                text: '5 campañas con mas clics'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                type: 'category',\r\n                data: topCampaigns.map(item => item.nombre),\r\n                axisLabel: {\r\n                    rotate: 90,\r\n                    margin: 1\r\n                  }\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: {\r\n                type: 'bar',\r\n                data: topCampaigns.map(item => item.clics)\r\n            }\r\n        }\r\n    }, [filterCampains]);\r\n\r\n    const topCampaignsImpressionsData = useMemo(() => {\r\n        const topCampaigns = filterCampains\r\n        .sort((a, b) => b.impresiones - a.impresiones)  \r\n        .slice(0, 5);\r\n        return {\r\n            title: {\r\n                text: '5 campañas con mas impresiones'\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                max: 'dataMax'\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                data:  topCampaigns.map(item => item.nombre),\r\n                inverse: true,\r\n                animationDuration: 300,\r\n                animationDurationUpdate: 300,\r\n            },\r\n            series:[\r\n                {\r\n                    realtimeSort: true,\r\n                    name: 'X',\r\n                    type: 'bar',\r\n                    data: topCampaigns.map(item => item.impresiones),\r\n                    label: {\r\n                      show: true,\r\n                      position: 'right',\r\n                      valueAnimation: true\r\n                    }\r\n                  }\r\n            ]\r\n        }\r\n    }, [filterCampains]);\r\n    useEffect(() =>{\r\n        if(filterCampains.length && !areAllPropertiesEmpty(filters))\r\n            messageApi.open({\r\n                type: 'error',\r\n                content: 'No se encontraron coincidencias',\r\n            });\r\n    }, [filterCampains]);\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(setState({\r\n            campaigns: campaignsData.campanas,\r\n            filterCampains: campaignsData.campanas\r\n        }));\r\n    }, [])\r\n    return {\r\n        costData,\r\n        topCampaignsData,\r\n        topCampaignsImpressionsData,\r\n        filterCampains,\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}